/**
 * Helper class to manage JWT.
 */
export declare class JwtHelper {
    /**
     * Decodes a Base64-encoded string.
     * @param str The Base64-encoded string
     * @returns {string}
     */
    urlBase64Decode(str: string): string;
    /**
     * Decodes the token and returns it as JSON object.
     * @param token The token to be decoded
     * @returns {Object} The token as JSON object
     */
    decodeToken(token: string): any;
    /**
     * Returns the date when a token expires
     * @param token The token
     * @returns {Date} The expiration date of the token
     */
    getTokenExpirationDate(token: string): Date;
    /**
     * Checks to see if the token is expired
     * @param token The token
     * @param offsetSeconds
     * @returns {boolean} True if the token is expired, false otherwise
     */
    isTokenExpired(token: string, offsetSeconds?: number): boolean;
    /**
     * Checks for presence of token and that token hasn't expired.
     * For use with the @CanActivate router decorator and NgIf
     */
    tokenNotExpired(tokenName?: string, jwt?: string): boolean;
}
